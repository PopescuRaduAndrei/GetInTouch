@model GetInTouch.Logic.ViewModels.User.ProfilePageViewModel
@using GetInTouch.Logic.ViewModels.Post

@{
    ViewData["Title"] = "ProfilePage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex" style="width: 87vw;">
    <div class="user-profile-container">
        @if (String.IsNullOrEmpty(Model.UserDetails.ProfileImage))
        {
            <img src="~/Images/default.png" class="profile-image" />
        }
        else
        {
            <img src="~/Images/@Model.UserDetails.ProfileImage" class="profile-image" />
        }

        <div class="pl-4 pr-4 pt-4 d-flex">
            <div class="mt-1" style="font-weight: 500; font-size: 20px;">@Model.UserDetails.FullName</div>
            <div class="mr-auto"></div>
            @if (Model.IsMyProfile)
            {
                <button class="user-profile-button navbar-user-drop-down-actions" id="dropdownMenuLinkMyProfile" data-toggle="dropdown">
                    <i class="fas fa-address-card mr-1"></i>
                    <span>My profile</span>
                </button>

                <div class="dropdown-menu" aria-labelledby="dropdownMenuLinkMyProfile">
                    <a class="dropdown-item cursor-pointer custom-dropdown-item" data-toggle="modal" data-target="#edit-profile-modal">
                        <i class="fa fa-edit mr-1"></i>
                        <span>Edit profile</span>
                    </a>
                    <a id="changeProfilePictureButton"
                       class="dropdown-item cursor-pointer custom-dropdown-item"
                       data-toggle="modal"
                       data-target="#upload-profile-modal">
                        <i class="fa fa-image mr-1"></i>
                        <span>Profile picture</span>
                    </a>
                    <a class="dropdown-item cursor-pointer custom-dropdown-item"
                       asp-controller="User" asp-action="Friends" asp-route-userId="@Model.UserDetails.UserId">
                        <i class="fas fa-user-friends mr-1"></i>
                        <span>See friends</span>
                    </a>
                    <a class="dropdown-item cursor-pointer custom-dropdown-item"
                       data-toggle="modal"
                       data-target="#history-user-profile-modal"
                       onclick="loadUserHistory()">
                        <i class="fa fa-history mr-1"></i>
                        <span>See history</span>
                    </a>
                </div>
            }
            else if (Model.AreFriends)
            {
                <button class="user-profile-button navbar-user-drop-down-actions" id="dropdownMenuLink" data-toggle="dropdown">
                    <i class="fa fa-check mr-1"></i>
                    <span>Friends</span>
                </button>

                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item cursor-pointer custom-dropdown-item"
                       asp-controller="User" asp-action="Friends" asp-route-userId="@Model.UserDetails.UserId">
                        <i class="fas fa-user-friends mr-1"></i>
                        <span>See friends</span>
                    </a>

                    @if (Model.CloseFriends)
                    {
                        <a asp-controller="User" asp-action="RemoveFromCloseFriends" asp-route-userId="@Model.UserDetails.UserId"
                           class="dropdown-item cursor-pointer custom-dropdown-item">
                            <i class="fa fa-check mr-1"></i>
                            <span>Close friends</span>
                        </a>
                    }
                    else
                    {
                        <a asp-controller="User" asp-action="AddToCloseFriends" asp-route-userId="@Model.UserDetails.UserId"
                           class="dropdown-item cursor-pointer custom-dropdown-item">
                            <span>Close friends</span>
                        </a>
                    }

                    @if (Model.IsFollowing)
                    {
                        <a asp-controller="User" asp-action="Unfollow" asp-route-userId="@Model.UserDetails.UserId"
                           class="dropdown-item cursor-pointer custom-dropdown-item">
                            Unfollow
                        </a>
                    }
                    else
                    {
                        <a asp-controller="User" asp-action="Follow" asp-route-userId="@Model.UserDetails.UserId"
                           class="dropdown-item cursor-pointer custom-dropdown-item">
                            Follow
                        </a>
                    }

                    <a class="dropdown-item cursor-pointer custom-dropdown-item"
                       asp-controller="User" asp-action="Unfriend" asp-route-profileUserId="@Model.UserDetails.UserId">
                        Unfriend
                    </a>
                </div>
            }
            else
            {
                <button id="add-friend-button" class="user-profile-button" onclick="addFriend()">
                    <i class="fa fa-user-plus mr-1"></i>
                    <span>Add friend</span>
                </button>
            }
        </div>

        <div class="d-flex p-4">
            <div class="mr-3 cursor-pointer" onclick="changeUserTab('about-me-id')">
                <span id="about-me-id" style="color: #2BAE66FF;">About me</span>
                <div id="about-me-underline" style="border-bottom: 3px solid #2BAE66FF;"></div>
            </div>
            <div class="mr-3 cursor-pointer" onclick="changeUserTab('work-education-id')">
                <span id="work-education-id">Work and education</span>
                <div id="work-education-underline" style="display: none; border-bottom: 3px solid #2BAE66FF;"></div>
            </div>
            <div class="cursor-pointer" onclick="changeUserTab('contact-id')">
                <span id="contact-id">Contact</span>
                <div id="contact-underline" style="display: none; border-bottom: 3px solid #2BAE66FF;"></div>
            </div>
        </div>

        <div class="pl-4 pr-4" id="about-me-container">

            <div class="d-flex mb-3">
                <div style="width: 30px;">
                    <i class="fa fa-home mr-3" style="font-size: 24px;"></i>
                </div>
                <div class="info-section-message">
                    @if (String.IsNullOrEmpty(Model.UserDetails.LivesIn))
                    {
                        <span>No place to live specified</span>
                    }
                    else
                    {
                        <span>Lives in</span>
                        <span>@Model.UserDetails.LivesIn</span>
                    }
                </div>
            </div>

            <div class="d-flex mb-3">
                <div style="width: 30px;">
                    <i class="fa fa-map-marker mr-2" style="font-size: 28px;"></i>
                </div>
                <div class="info-section-message">
                    @if (String.IsNullOrEmpty(Model.UserDetails.IsFrom))
                    {
                        <span>No hometown specified</span>
                    }
                    else
                    {
                        <span>From</span>
                        <span>@Model.UserDetails.IsFrom</span>
                    }
                </div>
            </div>

            <div class="d-flex mb-3">
                <div style="width: 30px;">
                    <i class="fa fa-user mr-2" style="font-size: 24px;"></i>
                </div>
                <div class="info-section-message">
                    @if (String.IsNullOrEmpty(Model.UserDetails.Gender))
                    {
                        <span>No gender specified</span>
                    }
                    else
                    {
                        <span>@Model.UserDetails.Gender</span>
                        <span>Gender</span>
                    }
                </div>
            </div>

            <div class="d-flex">
                <div style="width: 30px;">
                    <i class="fa fa-birthday-cake mr-2" style="font-size: 22px;"></i>
                </div>
                <div class="info-section-message">
                    @if (Model.UserDetails.Birthday == default(DateTime))
                    {
                        <span>Birthday not specified</span>
                    }
                    else
                    {
                        <span>Born on</span>
                        <span>@Model.UserDetails.Birthday.Date.ToString("dd MMM yyyy")</span>
                    }
                </div>
            </div>
        </div>

        <div class="pl-4 pr-4" id="work-education-container" style="display: none;">
            <div class="d-flex mb-3">
                <div style="width: 40px;">
                    <i class="fa fa-suitcase mr-4" style="font-size: 24px;"></i>
                </div>
                <div class="info-section-message">
                    @if (String.IsNullOrEmpty(Model.UserDetails.WorksAt))
                    {
                        <span>No work place specified</span>
                    }
                    else
                    {
                        <span>Works at</span>
                        <span>@Model.UserDetails.WorksAt</span>
                    }
                </div>
            </div>

            <div class="d-flex mb-3">
                <div style="width: 40px;">
                    <i class="fa fa-graduation-cap mr-4" style="font-size: 24px;"></i>
                </div>
                <div class="info-section-message">
                    @if (String.IsNullOrEmpty(Model.UserDetails.Colleague))
                    {
                        <span>No colleague specified</span>
                    }
                    else
                    {
                        <span>Went to</span>
                        <span>@Model.UserDetails.Colleague</span>
                    }
                </div>
            </div>
            <div class="d-flex mb-3">
                <div style="width: 40px;">
                    <i class="fas fa-school mr-4" style="font-size: 24px;"></i>
                </div>
                <div class="info-section-message">
                    @if (String.IsNullOrEmpty(Model.UserDetails.HighSchool))
                    {
                        <span>No high school specified</span>
                    }
                    else
                    {
                        <span>Went to</span>
                        <span>@Model.UserDetails.HighSchool</span>
                    }
                </div>
            </div>
        </div>

        <div class="pl-4 pr-4" id="contact-container" style="display: none;">
            <div class="d-flex mb-3">
                <div style="width: 40px;">
                    <i class="fa fa-envelope mr-3" style="font-size: 24px;"></i>
                </div>
                <div class="d-flex flex-column">
                    @if (String.IsNullOrEmpty(Model.UserDetails.Email))
                    {
                        <span class="info-section-message">No email addresss specified</span>
                    }
                    else
                    {
                        <span class="mr-1">Email address</span>
                        <span class="info-section-message">@Model.UserDetails.Email</span>
                    }
                </div>
            </div>

            <div class="d-flex mb-3">
                <div style="width: 40px;">
                    <i class="fa fa-mobile-phone mr-4" style="font-size: 24px;"></i>
                </div>
                <div class="d-flex flex-column">
                    @if (String.IsNullOrEmpty(Model.UserDetails.PhoneNo))
                    {
                        <span class="info-section-message">No phone number specified</span>
                    }
                    else
                    {
                        <span class="mr-1">Phone number </span>
                        <span class="info-section-message">@Model.UserDetails.PhoneNo</span>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="ml-auto">
        <partial name="~/Views/Post/_Posts.cshtml" model="@new PostsViewModel { Posts = Model.Posts }" />
    </div>
</div>

<div class="modal fade" id="edit-profile-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Edit profile</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-controller="User" asp-action="EditProfile" enctype="multipart/form-data">
                <div class="modal-body">
                    <partial name="~/Views/User/_EditProfile.cshtml" model="@Model.UserDetails" />
                </div>
                <div class="modal-footer">
                    <button type="button"
                            id="edit-profile-previous-button"
                            onclick="onClickPrevious()"
                            class="btn custom-button"
                            style="display: none;">
                        Previous
                    </button>
                    <button type="button" id="edit-profile-next-button" onclick="onClickNext()" class="btn custom-button">Next</button>
                    <button style="display: none;"
                            type="submit"
                            id="edit-profile-save-button"
                            class="btn custom-button">
                        Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="upload-profile-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Profile picture</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-controller="User" asp-action="ChangeProfilePicture" enctype="multipart/form-data">
                <div id="changeProfilePictureModalBody" class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn custom-button">Change</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="history-user-profile-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Your history</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
                <div id="user-history-modal-body" class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn custom-button">Close</button>
                </div>
        </div>
    </div>
</div>

@section scripts{ 
<script>
    (function () {
        setColorOnLoadPosts();
    })();

    @foreach (var item in Model.Posts)
    {
        @: addComment("@item.Post.Id");
    }

    function addComment(postId) {
        var commentInput = document.getElementById("add-comment-" + postId);

        commentInput.addEventListener("keyup", function (event) {
            if (event.keyCode == 13) {
                var commentMessage = commentInput.value;
                $.ajax({
                    method: 'post',
                    url: '/Post/AddComment?postId=' + postId + "&commentMessage=" + commentMessage,
                    success: function (result) {
                        if (result > 0) {
                            CreateAndAttachComment(postId, commentMessage);
                            document.getElementById("number-of-comments-" + postId).innerText = result;
                        }
                    }
                });
            }
        });
    }

    function CreateAndAttachComment(postId, commentMessage) {
        var userDiv = document.createElement("div");
        userDiv.style.fontWeight = "600";
        userDiv.innerText = "@Model.ActiveUser.FirstName" + " " + "@Model.ActiveUser.LastName";

        var commentDiv = document.createElement("div");
        commentDiv.innerText = commentMessage;

        var commentInfoDiv = document.createElement("div");
        commentInfoDiv.classList.add("p-2");
        commentInfoDiv.classList.add("add-comment-container");
        commentInfoDiv.appendChild(userDiv);
        commentInfoDiv.appendChild(commentDiv);

        var img = document.createElement("img");
        img.style.borderRadius = "50%";
        img.style.width = "2rem";
        img.style.height = "2rem";
        img.style.marginRight = "0.8rem";
        img.setAttribute("src", "/Icons/demo.jpg");

        var commentContainerDiv = document.createElement("div");
        commentContainerDiv.classList.add("p-2");
        commentContainerDiv.classList.add("d-flex");
        commentContainerDiv.appendChild(img);
        commentContainerDiv.appendChild(commentInfoDiv);

        var commentsContainer = document.getElementById("sections-list-" + postId);
        commentsContainer.insertBefore(commentContainerDiv, commentsContainer.childNodes[2]);

        document.getElementById("add-comment-" + postId).value = "";
    }

    function setColorOnLoadPosts() {
        @foreach (var item in Model.Posts)
        {
            @: var color = getReactionColor("@Html.Raw(item.AppreciationDetails.AppreciationButtonMessage)");
            @: document.getElementById("likeButton-@item.Post.Id").style.color = color;
        }
    }

    function showAllReactions(postId) {
        document.getElementById("reactionBox-" + postId).style.display = "flex";
    }

    function hideAllReactions(postId) {
        document.getElementById("reactionBox-" + postId).style.display = "none";
    }

    function PlaceReaction(postId, reaction, emoji) {
        $.ajax({
            method: 'post',
            url: '/Post/AddAppreciation?PostId=' + postId + "&emoji=" + emoji,
            success: function (data) {
                updatePostInfo(data, postId);
            }
        });
    }

    function updatePostInfo(data, postId) {
        var likeButton = document.getElementById("likeButton-" + postId);
        if (likeButton != null) {
            likeButton.innerText = data.appreciationButtonMessage;

            color = getReactionColor(data.appreciationButtonMessage);
            likeButton.style.color = color;
        }

        var postAppreciations = document.getElementById("post-reactions-" + postId);
        if (postAppreciations != null) {
            postAppreciations.innerText = data.givenAppreciations;
        }

        var postAppreciationsNumber = document.getElementById("post-number-reactions-" + postId);
        if (postAppreciationsNumber != null) {
            postAppreciationsNumber.innerText = data.appreciationsNumber;
        }

    }

    function getReactionColor(data) {
        if (data == "❤️ Love" || data == "😡 Angry") {
            return "red";
        }

        if (data == "Like") {
            return "black";
        }

        return "#a1a318";
    }

    function ShowPostInformations(postId) {
        $.ajax({
            url: '/Post/GetPostReactionsOverview?postId=' + postId,
            success: function (data) {
                PopulatePostModal(data);
            }
        });
    }

    function PopulatePostModal(data) {
        PopulateHeaderPostModal(data);
        PrepareBodyPostModal();

        var postModalBody = document.getElementById("reactionsModalBody");
        for (let index = 0; index < data.postReactionInfoModels.length; index++) {
            var row = CreateReactionModalRow(data.postReactionInfoModels[index]);
            postModalBody.appendChild(row);
        }
    }

    function PopulateHeaderPostModal(data) {
        var likesContainer = document.getElementById("likes-container-modal");
        if (data.numberOfLikes > 0) {
            var likesNumberContainer = document.getElementById("number-likes-container-modal");
            likesNumberContainer.innerText = data.numberOfLikes;
        }
        else {
            likesContainer.style.display = "none";
        }

        var lovesContainer = document.getElementById("loves-container-modal");
        if (data.numberOfLoves > 0) {
            var lovesNumberContainer = document.getElementById("number-loves-container-modal");
            lovesNumberContainer.innerText = data.numberOfLoves;
        }
        else {
            lovesContainer .style.display = "none";
        }

        var hahaContainer = document.getElementById("haha-container-modal");
        if (data.numberOfHaha > 0) {
            hahaNumberContainer = document.getElementById("number-haha-container-modal");
            hahaNumberContainer.innerText = data.numberOfHaha;
        }
        else {
            hahaContainer.style.display = "none";
        }

        var sadContainer = document.getElementById("sad-container-modal");
        if (data.numberOfSad > 0) {
            var sadNumberContainer = document.getElementById("number-sad-container-modal");
            sadNumberContainer.innerText = data.numberOfSad;
        }
        else {
            sadContainer.style.display = "none";
        }

        var wowContainer = document.getElementById("wow-container-modal");
        if (data.numberOfWow > 0) {
            var wowNumberContainer = document.getElementById("number-wow-container-modal");
            wowNumberContainer.innerText = data.numberOfWow;
        }
        else {
            wowContainer.style.display = "none";
        }

        var angryContainer = document.getElementById("angry-container-modal");
        if (data.numberOfAngry > 0) {
            var angryNumberContainer = document.getElementById("number-angry-container-modal");
            angryNumberContainer.innerText = data.numberOfAngry;
        }
        else {
            angryContainer.style.display = "none";
        }
    }

    function PrepareBodyPostModal() {
        var content = document.getElementById("reactionsModalBody");
        content.style.maxHeight = "40vh";
        content.style.overflow = "auto";

        for (let index = 0; index < content.childNodes.length; index++) {
            content.removeChild(content.childNodes[index]);
        }
    }

    function CreateReactionModalRow(user) {
        var parrentDiv = document.createElement("div");
        parrentDiv.className = "d-flex mb-2";

        var userInfo = CreateUserInfo(user);
        parrentDiv.appendChild(userInfo);

        if (user.userId != "@Model.ActiveUser.Id") {
            var friendsInfo = CreateFriendsInfo(user);
            parrentDiv.appendChild(friendsInfo);
        }

        return parrentDiv;
    }

    function CreateUserInfo(user) {
        var childDiv = document.createElement("div");
        childDiv.className = "p-2 mr-auto";

        var image = document.createElement("img");
        image.src = "/Icons/" + user.image;
        image.className = "left-side-item-image";
        childDiv.appendChild(image);

        var span = document.createElement("span");
        span.textContent = user.fullName;
        span.className = "ml-1";
        childDiv.appendChild(span);

        return childDiv;
    }

    function CreateFriendsInfo (user) {
        var button = document.createElement("button");
        button.classList.add("post-modal-user-button");

        var contentButton = document.createElement("span");
        var icon = document.createElement("i");
        icon.style.color = "white";
        icon.style.marginRight = "5px";

        if (user.isFriend === true) {
            contentButton.textContent = "Friends";

            icon.classList.add("fa");
            icon.classList.add("fa-check");
        }
        else {
            button.addEventListener("click", function () {
                $.ajax({
                    method: 'post',
                    url: '/Notification/CreateFriendshipNotification?receiverId=' + user.userId,
                    success: function (result) {
                        if (result == "true") {
                            button.innerHTML = "<div>Invitation sent</div>";
                            button.setAttribute("disabled", "disabled");
                            button.style.background = "#054d2d";
                            button.style.pointerEvents = "none";
                        }
                    }
                });
            });

            contentButton.textContent = "Add friend";

            icon.classList.add("fa");
            icon.classList.add("fa-user-plus");
        }

        button.appendChild(icon);
        button.appendChild(contentButton);

        return button;
    }

    function OpenCommentsSection(postId) {
        document.getElementById("section-comments-" + postId).style.display = "block";
    }

    function changeUserTab(tabId) {
        let tabsIds = ["about-me", "work-education", "contact"];
        console.log(tabId);
        for (let i = 0; i < tabsIds.length; i++) {
            let tabTitle = document.getElementById("" + tabsIds[i] + "-id");
            let tabUnderline = document.getElementById("" + tabsIds[i] + "-underline");
            let tabContainer = document.getElementById("" + tabsIds[i] + "-container");

            if (tabId == tabsIds[i] + "-id") {
                tabTitle.style.color = "#2BAE66FF";
                tabUnderline.style.display = "block";
                tabContainer.style.display = "block";
            }
            else {
                tabTitle.style.color = "black";
                tabUnderline.style.display = "none";
                tabContainer.style.display = "none";
            }
        }
    }



    var editProfileStep = 1;

    function onClickEditProfileButton() {
        let previousButton = document.getElementById("edit-profile-previous-button");
        let nextButton = document.getElementById("edit-profile-next-button");
        let saveButton = document.getElementById("edit-profile-save-button");

        previousButton.style.display = editProfileStep == 2 || editProfileStep == 3 ? "initial" : "none";
        nextButton.style.display = editProfileStep == 1 || editProfileStep == 2 ? "initial" : "none";
        saveButton.style.display = editProfileStep == 3 ? "initial" : "none";

        let containerStepOne = document.getElementById("edit-profile-step-one");
        let containerStepTwo = document.getElementById("edit-profile-step-two");
        let containerStepThree = document.getElementById("edit-profile-step-three");

        containerStepOne.style.display = editProfileStep == 1 ? "initial" : "none";
        containerStepTwo.style.display = editProfileStep == 2 ? "initial" : "none";
        containerStepThree.style.display = editProfileStep == 3 ? "initial" : "none";
    }

    function onClickNext() {
        editProfileStep++;
        onClickEditProfileButton();
    }

    function onClickPrevious() {
        editProfileStep--;
        onClickEditProfileButton();
    }

    function addFriend() {
        $.ajax({
            method: 'post',
            url: '/Notification/CreateFriendshipNotification?receiverId=' + "@Model.UserDetails.UserId",
            success: function (result) {
                if (result == "true") {
                    let button = document.getElementById("add-friend-button");

                    button.innerHTML = "<div>Invitation sent</div>";
                    button.setAttribute("disabled", "disabled");
                    button.style.background = "#054d2d";
                    button.style.pointerEvents = "none";
                }
            }
        });
    }

    document.getElementById("changeProfilePictureButton").addEventListener("click", function () {
        $.ajax({
            url: '/User/ChangeProfilePicture?userId=' + "@Model.UserDetails.UserId",
            method: 'get',
            success: function (view) {
                document.getElementById("changeProfilePictureModalBody").innerHTML = view;
            }
        });
    });

    function selectProfileImage(images, selectedImage) {
        let arrImages = images.split(",");
        let checkProfilePicture = document.getElementById("check-profile-" + selectedImage);
        let selectedProfilePictureContainer = document.getElementById("selected-profile-image-container");

        if (checkProfilePicture.style.display != "none") {
            console.log("asd");
            checkProfilePicture.style.zIndex = "";
            selectedProfilePictureContainer.value = "";
            checkProfilePicture.style.display = "none";
            return;
        }

        for (let i = 0; i < arrImages.length; i++) {
            checkProfilePicture = document.getElementById("check-profile-" + arrImages[i]);
            checkProfilePicture.style.zIndex = "";
            checkProfilePicture.style.display = "none";
        }

        checkProfilePicture = document.getElementById("check-profile-" + selectedImage);
        checkProfilePicture.style.zIndex = "1";
        checkProfilePicture.style.display = "initial";
        selectedProfilePictureContainer.value = selectedImage;
    }

    function loadUserHistory() {
        $.ajax({
            url: '/User/History',
            success: function (view) {
                document.getElementById("user-history-modal-body").innerHTML = view;
            }
        });
    }
</script>

<script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>
}